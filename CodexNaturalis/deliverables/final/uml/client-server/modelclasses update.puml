@startuml
class Player {
    - nickname : String {readOnly}
    - color : PlayerColor {readOnly}
    - score : int
    - secretObjective : ObjectiveCard {readOnly}
    - cardsInHand : List<Card> {readOnly}
    - field : GameField {readOnly}

    + Player(nickname : String, score : int, field : GameField,
    + Player(other : Player)
    + getNickname() : String
    + getColor() : PlayerColor
    + getScore() : int
    + incrementScore(increment : int)
    + hasSecretObjective() : boolean
    + getSecretObjective() : ObjectiveCard
    + setSecretObjective(secretObjective : ObjectiveCard)
    + getCardsInHand() : List<Card>
    + addCard(card : Card)
    + removeCard(cardId : int) : Card
    + getField() : GameField
    + placeCardOnField(card : Card, orientation : CardOrientation, position : Point)
}

class Game {
    + getPlayers() : List<Players>
    - isLastPlayerOfRound() : boolean
    - areDecksEmpty() : boolean
    - someoneReachedScore(threshold : int) : boolean
    + getVisibleCards() : Map<DrawChoice, Card)
    + setVisibleCard(Card : card, position : DrawChoice)
    + changeCurrentPlayer()
    + getPlayerSetup(playerName : String)
    + getResourceCardDeck() : Deck
    + getGoldenCardDeck() : Deck
    + getPlayerByName(nickname : String) : Player
    + makePlayerPlaceCard(....)
    + makePlayerDraw(....)
    + registerPlayerSetup(....)
    + isEnded() : boolean
    + skipTurn()
}



@enduml