@startuml
!startsub CARDS
'They can be useful in future
/'
enum CartType {
    NORMAL,
    GOLDEN,
    INITIAL
}
'/


enum CardColor {
    RED,
    SKYBLUE,
    PURPLE,
    GREEN,
}

enum Symbol{
    PLANT,
    ANIMAL,
    INSECT,
    FUNGI,
    QUILL,
    INKWELL,
    MANUSCRIPT,
    BLANK,
    HIDDEN
    + toString()
}

enum AnglePosition {
    UP_LEFT,
    UP_RIGHT,
    DOWN_LEFT,
    DOWN_RIGHT,
}

class Card {
/'
    color: CardColor
    front : CardSide
    rear : CardSide
'/
    - angles : HashMap<AnglePosition, Symbol>
    +getColor() : CardColor
    +getFront() : CardSide
    +getAngle(position : AnglePosition)

}

class ResourceCard {

}

class GoldCard {

}

class InitialCard {

}


class CardSide {
    /'
    - centerSymbols : Set<Symbol>
    - playingRequirements : RequirementFunction
    - pointsRewarded: PointFunction
    + getSymbolFromAngle(angleSide: Angle)
    '/
    + getDisplayedSymbols : Set<Symbol>
}




class RandomPicker <T>{
        - elements : Set<T>

        + RandomPicker(Collection<T> elements)
        + isEmpty() : bool
        '+ getElementsNumber() : int
        + extractRandomElement() : Optional<T>
}


class Deck{
        '- picker : RandomPicker<Card>
        - topCard : Optional<Card>

        Deck(cards : Collection<Card>)
        + isEmpty() : bool
        + leftCards() : int
        + showTopCard() : Optional<Card>
        + draw() : Optional<Card>

}


class InitialCard {

}

/'It doesn't Implement point function just
because it may have some other attribute in future'/
class ObjectiveCard {
    - rewardFunction : PointFunction
    +ObjectiveCard(rewardFunction : PointFunction)
    +getRewardFunction() : PointFunction
}



Deck "1" --* "*" Card : - cardPicker
(Deck, Card) .. RandomPicker
Card  --* "2" CardSide : - front, back {readOnly}
Card  --> CardColor : - color {readOnly}
InitialCard --|> Card
ResourceCard --|> Card
GoldCard --|> Card

CardSide --> RequirementFunction : - playingRequirements
CardSide --> PointFunction : - pointsRewarded
CardSide -- Symbol : -centerSymbols : List
!endsub
@enduml